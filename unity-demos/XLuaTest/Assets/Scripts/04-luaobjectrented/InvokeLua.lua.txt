
local calc_mt = {
    __index = {
        Add = function(self, a, b) 
            return (a + b) * self.Mult
        end,
        
        get_Item = function(self, index) 
            return self.list[index + 1]
        end,
        
        set_Item = function(self, index, value) 
            self.list[index + 1] = value
            self:notify({name = index, value = value})
        end,
        
        add_PropertyChanged = function(self, delegate)
            if self.notifylist == null then
                self.notifylist = {}
            end
            table.insert(self.notifylist, delegate)
            print('add', delegate)
        end,
        
        remove_PropertyChanged = function(self, delegate)
            for i=1, #self.notifylist do
                if CS.System.Object.Equals(self.notifylist[i], delegate) then
                    table.remove(self.notifylist, i)
                    break
                end
            end
            print('remove', delegate)
        end,
        
        notify = function(self, evt)
            if self.notifylist ~= nil then
                for i = 1, #self.notifylist do
                    self.notifylist[i](self, evt)
                end
            end
        end
    }
}

Calc = {
    New = function(mult, ...) 
        print(...)
        return setmetatable({Mult = mult, list = {'aaa','bbb', 'cccc'}}, calc_mt)
    end
}